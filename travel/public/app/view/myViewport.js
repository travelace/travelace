/*
 * File: app/view/myViewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.myViewport', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.myviewport',

    requires: [
        'app.view.MyContainerViewModel',
        'app.view.panel.panelprincipal',
        'Ext.tree.Panel',
        'Ext.tree.View',
        'Ext.Img',
        'Ext.tab.Panel'
    ],

    viewModel: {
        type: 'mycontainer'
    },
    itemId: 'headerPanel',
    layout: 'border',
    defaultListenerScope: true,

    items: [
        {
            xtype: 'treepanel',
            region: 'west',
            split: true,
            itemId: 'menuPanel',
            width: 210,
            collapseFirst: false,
            collapsed: false,
            collapsible: true,
            title: 'Panel',
            store: 'menuStore',
            viewConfig: {
                itemId: 'treeMenu'
            },
            listeners: {
                itemclick: 'onMenuPanelItemClick'
            }
        },
        {
            xtype: 'panel',
            region: 'north',
            baseCls: 'div_piso',
            height: 92,
            itemId: 'headerPanel',
            items: [
                {
                    xtype: 'image',
                    height: 86,
                    margin: 2,
                    width: 293,
                    src: 'img/logo.jpg'
                }
            ]
        },
        {
            xtype: 'panelprincipal',
            region: 'center'
        },
        {
            xtype: 'container',
            region: 'south',
            baseCls: 'div_tope',
            height: 40,
            html: '<h1>Av. San Felipe c/2de transversal Torre Bancaracas piso 6 ofic. 6-05, Urb La Castellana, Caracas<h1>',
            layout: 'absolute'
        }
    ],

    onMenuPanelItemClick: function(dataview, record, item, index, e, eOpts) {
        var me = this;


                switch (record.get('id'))
                {
                    case 'tab2':case 'agencias':case 'empresas':
                    case 'bancos':case 'paises':case 'grupos':case 'perfiles':
                    case 'usuarios':case "productos":case "emision":

                        var vport = dataview.up('myviewport'),
                                tabpanel = vport.down('panelprincipal');
                        var xtype = vport.xtype,
                                className,
                                ViewClass;
                        if (xtype) {

                            current = Ext.ComponentQuery.query('widget.' + record.get('id'));
                            var bandera = false;
                            var posicion = 0;
                            for (var i = 0; i < tabpanel.items.length; i++) {

                                var id = tabpanel.items.items[i].id.split("-");
                                if (id[0] == record.get('id')) {
                                    bandera = true;
                                    posicion = i;
                                }
                            }
                            if (bandera == true) {
                                tabpanel.setActiveTab(tabpanel.items.items[posicion]);
                            } else {
                                className = Ext.ClassManager.getNameByAlias('widget.' + record.get('id'));
                                ViewClass = Ext.ClassManager.get(className);

                                if (ViewClass) {
                                    tabpanel.add(new ViewClass());
                                    var length = tabpanel.items.length - 1;
                                    tabpanel.setActiveTab(tabpanel.items.items[length]);

                                }
                            }
                        }
                        break;
                }
    }

});